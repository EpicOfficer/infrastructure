---

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DATABASE=${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  zipline:
    image: ghcr.io/diced/zipline
    restart: unless-stopped
    environment:
      - CORE_SECRET=${CORE_SECRET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASS}@postgres/${POSTGRESS_DB}
    volumes:
      - uploads:/zipline/uploads
      - public:/zipline/public
    depends_on:
      - postgres
    networks:
      - default
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${NAME}.rule=Host(`${HOST}`)"
      - "traefik.http.routers.${NAME}.entrypoints=websecure"
      - "traefik.http.routers.${NAME}.tls.certresolver=letsencrypt"
      - "traefik.http.services.${NAME}.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

volumes:
  uploads:
  public:
  pg_data:

networks:
  proxy:
    external: true